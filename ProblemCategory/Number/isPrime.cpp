//判断 是否是素数

/*首先看一个关于质数分布的规律：大于等于5的质数一定和6的倍数相邻。例如5和7，11和13,17和19等等；
证明：令x≥1，将大于等于5的自然数表示如下：
······ 6x-1，6x，6x+1，6x+2，6x+3，6x+4，6x+5，6(x+1），6(x+1)+1 ······
可以看到，不在6的倍数两侧，即6x两侧的数为6x+2，6x+3，6x+4，由于2(3x+1)，3(2x+1)，2(3x+2)，
所以它们一定不是素数，再除去6x本身，显然，素数要出现只可能出现在6x的相邻两侧。
这里有个题外话，关于孪生素数，有兴趣的道友可以再另行了解一下，由于与我们主题无关，暂且跳过。
这里要注意的一点是，在6的倍数相邻两侧并不是一定就是质数
*/
//o(sqrt(n))
bool isPrime(int num)
{
        //两个较小数另外处理  
        if (num == 2 || num == 3)
                return 1;
        //不在6的倍数两侧的一定不是质数  
        if (num % 6 != 1 && num % 6 != 5)
                return 0;
        int tmp = sqrt(num);
        //在6的倍数两侧的也可能不是质数  
        for (int i = 5; i <= tmp; i += 6)
                if (num %i == 0 || num % (i + 2) == 0)
                        return 0;
        //排除所有，剩余的是质数  
        return 1;
}